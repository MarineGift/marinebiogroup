"use strict";(()=>{var e={};e.id=873,e.ids=[873],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2848:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>h,patchFetch:()=>x,requestAsyncStorage:()=>m,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>l});var r={};s.r(r),s.d(r,{GET:()=>c,POST:()=>p});var n=s(9303),a=s(8716),o=s(670),u=s(7070);let i={username:"admin",password:"admin123"};async function p(e){try{let{username:t,password:s}=await e.json();if(!t||!s)return u.NextResponse.json({success:!1,message:"사용자명과 비밀번호를 입력해주세요."},{status:400});if(t!==i.username||s!==i.password)return u.NextResponse.json({success:!1,message:"잘못된 사용자명 또는 비밀번호입니다."},{status:401});{let e=u.NextResponse.json({success:!0,message:"로그인이 성공했습니다."},{status:200}),s=btoa(`${t}:${Date.now()}`);return e.cookies.set("auth-token",s,{httpOnly:!0,secure:!0,sameSite:"strict",maxAge:604800}),e}}catch(e){return console.error("Login API Error:",e),u.NextResponse.json({success:!1,message:"서버 오류가 발생했습니다."},{status:500})}}async function c(){return u.NextResponse.json({message:"Login endpoint - POST method required"},{status:405})}let d=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/auth/login/route",pathname:"/api/auth/login",filename:"route",bundlePath:"app/api/auth/login/route"},resolvedPagePath:"D:\\0_프로그램개발\\Github\\marinebiogroup\\src\\app\\api\\auth\\login\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:m,staticGenerationAsyncStorage:l,serverHooks:g}=d,h="/api/auth/login/route";function x(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:l})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[948,972],()=>s(2848));module.exports=r})();